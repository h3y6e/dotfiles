git_protocol: https
editor:
prompt: enabled
pager:
aliases:
  memo: issue create --repo h3y6e/log
  defaultbranch: |
    !git rev-parse --git-dir > /dev/null 2>&1 || { echo "Not a git repository"; exit 1; }
    defaultbranch=$(gh repo view --json defaultBranchRef --jq ".defaultBranchRef.name")
    [ -z "$defaultbranch" ] && exit 0
    git config --local init.defaultBranch "$defaultbranch"
    echo "$defaultbranch"
  pr worktree: |
    !git rev-parse --git-dir >/dev/null 2>&1 || { echo "Not a git repository"; exit 1; }
    type peco >/dev/null 2>&1 || { echo "peco is not installed"; exit 1; }
    IFS=$'\t' read -r num branch _ <<<"$(gh pr list --json number,headRefName,title --jq '.[] | [.number, .headRefName, .title] | @tsv' | peco)"
    [ -z "$num" ] && exit 0
    base=$(git rev-parse --show-toplevel)
    workdir="${base%/*}/$(basename "$base")/.git/w/${branch//\//-}"
    git worktree add -B "$branch" "$workdir" "origin/$branch" && git -C "$workdir" submodule update --init --recursive
    [ -f "$base/local.code-workspace" ] && cp "$base/local.code-workspace" "$workdir/"
  worktree: |
    !git rev-parse --git-dir >/dev/null 2>&1 || { echo "Not a git repository"; exit 1; }
    branch=${1:-$(date +"%Y%m%d-%H%M%S")}
    base=$(git rev-parse --show-toplevel)
    workdir="${base%/*}/$(basename "$base")/.git/w/${branch//\//-}"
    git worktree add -b "$branch" "$workdir" && git -C "$workdir" submodule update --init --recursive
    [ -f "$base/local.code-workspace" ] && cp "$base/local.code-workspace" "$workdir/"
http_unix_socket:
browser:
version: "1"
