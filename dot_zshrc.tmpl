#==============================================================================
# XDG Base Directory
#==============================================================================
[[ -z "$XDG_CONFIG_HOME" ]] && export XDG_CONFIG_HOME="$HOME/.config"
[[ -z "$XDG_CACHE_HOME" ]] && export XDG_CACHE_HOME="$HOME/.cache"
[[ -z "$XDG_DATA_HOME" ]] && export XDG_DATA_HOME="$HOME/.local/share"
[[ -z "$XDG_STATE_HOME" ]] && export XDG_STATE_HOME="$HOME/.local/state"

#==============================================================================
# Zsh Options
#==============================================================================
# comment
setopt INTERACTIVE_COMMENTS

# history
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_ALLOW_CLOBBER
setopt HIST_IGNORE_SPACE
setopt HIST_NO_FUNCTIONS
setopt HIST_NO_STORE
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# directory
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT
setopt PUSHD_TO_HOME
setopt CDABLE_VARS
setopt MULTIOS
setopt EXTENDED_GLOB
unsetopt CLOBBER

# auto correction
setopt CORRECT
alias cd='nocorrect cd'
alias cp='nocorrect cp'
alias grep='nocorrect grep'
alias ln='nocorrect ln'
alias man='nocorrect man'
alias mkdir='nocorrect mkdir -p'
alias mv='nocorrect mv'
alias rm='nocorrect rm'
alias sudo='nocorrect sudo'

#==============================================================================
# Aliases
#==============================================================================
# ls
alias ls='ls -G'
alias l='ls -A'
alias ll='ls -lh'
alias la='ll -A'
alias sl='ls'

# network
alias ipen0='ipconfig getifaddr en0'

# git
alias gr='cd $(git rev-parse --show-superproject-working-tree --show-toplevel | head -1)'

# chezmoi
alias cz='chezmoi'
alias czc='code $(cz source-path)'
alias czz='zed $(cz source-path)'

# other
alias tree='tre'

#==============================================================================
# Package Managers & Runtimes
#==============================================================================
# homebrew
if type brew &>/dev/null; then
  # gcloud
  if type gcloud &>/dev/null; then
    source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
    source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"
  fi

  # mysql-client
  [[ -d "$(brew --prefix)/opt/mysql-client@8.4" ]] && export PATH="$(brew --prefix)/opt/mysql-client@8.4/bin:$PATH"

  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

# sheldon
type sheldon &>/dev/null && eval "$(sheldon source)"

# flutter
[[ -f "$XDG_CONFIG_HOME/.dart-cli-completion/zsh-config.zsh" ]] && . "$XDG_CONFIG_HOME/.dart-cli-completion/zsh-config.zsh" || true
function check-fvm() {
  if [[ -d ".fvm" ]]; then
    alias flutter='fvm flutter'
    alias dart='fvm dart'
  fi
}

#==============================================================================
# Development Tools
#==============================================================================
# ghq
if type ghq &>/dev/null && type peco &>/dev/null; then
  function g() {
    local dir="$(ghq list | peco)"
    [ ! -z $dir ] && cd "$(ghq root)/$dir"
  }
fi

# code
function c() {
  local editor=""
  for e in {{ if eq .chezmoi.username "h3y6e" }}cursor code{{ else }}code cursor{{ end }} windsurf; do
    if type $e &>/dev/null; then
      editor=$e
      break
    fi
  done

  if [ -z "$editor" ]; then
    echo "editor not found"
    return 1
  fi

  if [ -f "local.code-workspace" ]; then
    $editor -n "local.code-workspace"
  else
    local wsfile=$(find . -maxdepth 1 -type f -name "*.code-workspace" | head -n 1)
    if [ ! -z "$wsfile" ]; then
      $editor -n "$wsfile"
    else
      $editor -n .
    fi
  fi
}

# direnv
type direnv &>/dev/null && eval "$(direnv hook zsh)"

# 1password cli
[[ -f "$XDG_CONFIG_HOME/op/plugins.sh" ]] && source "$XDG_CONFIG_HOME/op/plugins.sh"

# claude code
export CLAUDE_CONFIG_DIR="$XDG_CONFIG_HOME/claude"

{{ if eq .chezmoi.os "darwin" -}}
#==============================================================================
# macOS Specific Settings
#==============================================================================
# clipboard
alias clip='pbcopy'

# tailscale
alias tailscale='/Applications/Tailscale.app/Contents/MacOS/Tailscale'
[[ -f "${fpath[1]}/_tailscale" ]] || tailscale completion zsh >"${fpath[1]}/_tailscale"

# xcode
alias xcode='xed'
alias xcodeclean='rm -rf ~/Library/Developer/Xcode/DerivedData'
{{- end }}

#==============================================================================
# Autocompletion
#==============================================================================
# chpwd hook
autoload -Uz add-zsh-hook
add-zsh-hook chpwd check-fvm

# zfunc
[[ -d $HOME/.zfunc ]] && fpath+=$HOME/.zfunc

# compinit
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump)" ]; then
  compinit
else
  compinit -C
fi

# bashcompinit
autoload -U +X bashcompinit && bashcompinit

# ni.zsh
compdef _ni ni
